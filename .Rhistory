wine <- read.table("D:\\Rfile\\wine.data", sep = ",")
save(wine, file = 'wine.rda')
save(wine, file = 'wine.rda')
save(wine, file = 'data/wine.rda')
devtools::build_vignettes()
devtools::document()
devtools::build_vignettes()
devtools::document()
devtools::document()
devtools::document()
library(SC19017)
?rw_MetropolisR
rwR <- rw_MetropolisR(1,25,2000)$x
rwC <- rw_MetropolisC(1,25,2000)$x
par(mfrow=c(1,2))
plot(rwR, type="l", xlab=bquote(sigma == 1), ylab="X", ylim=range(rwR))
plot(rwC, type="l", xlab=bquote(sigma == 1), ylab="X", ylim=range(rwC))
devtools::document()
devtools::build_vignettes()
devtools::document()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::document()
warnings()
devtools::document()
devtools::build_vignettes()
library(SC19017)
SC19017::rw_MetropolisC
devtools::document()
devtools::build_vignettes()
library(SC19017)
?rw_MetropolisC
rwR <- rw_MetropolisR(1,25,2000)$x
rwC <- rw_MetropolisC(1,25,2000)$x
par(mfrow=c(1,2))
plot(rwR, type="l", xlab=bquote(sigma == 1), ylab="X", ylim=range(rwR))
plot(rwC, type="l", xlab=bquote(sigma == 1), ylab="X", ylim=range(rwC))
?rw_MetropolisC
rwC <- rw_MetropolisC(1,25,2000)$x
devtools::document()
devtools::build_vignettes()
library(SC19017)
?`SC19017-package`
rwR <- rw_MetropolisR(1,25,2000)$x
rwC <- rw_MetropolisC(1,25,2000)$x
par(mfrow=c(1,2))
plot(rwR, type="l", xlab=bquote(sigma == 1), ylab="X", ylim=range(rwR))
plot(rwC, type="l", xlab=bquote(sigma == 1), ylab="X", ylim=range(rwC))
devtools
devtools::document()
library(SC19017)
devtools::document()
library(SC19017)
?`SC19017-package`
devtools::document()
devtools::document()
library(SC19017)
?rw_MetropolisC
data(wine)
wine
devtools::build_vignettes()
devtools::build_vignettes()
library(SC19017)
rw_MetropolisC()
?rw_MetropolisC
?SC19017
rwR <- rw_MetropolisR(1,25,2000)$x
rwC <- rw_MetropolisC(1,25,2000)$x
par(mfrow=c(1,2))
plot(rwR, type="l", xlab=bquote(sigma == 1), ylab="X", ylim=range(rwR))
plot(rwC, type="l", xlab=bquote(sigma == 1), ylab="X", ylim=range(rwC))
devtools::document()
devtools::document()
devtools::document()
devtools::document()
library(SC19017)
?`SC19017-package`
rwR <- rw_MetropolisR(1,25,2000)$x
rwC <- rw_MetropolisC(1,25,2000)$x
par(mfrow=c(1,2))
plot(rwR, type="l", xlab=bquote(sigma == 1), ylab="X", ylim=range(rwR))
plot(rwC, type="l", xlab=bquote(sigma == 1), ylab="X", ylim=range(rwC))
library(SC19017)
rwR <- rw_MetropolisR(1,25,2000)$x
rwC <- rw_MetropolisC(1,25,2000)$x
par(mfrow=c(1,2))
plot(rwR, type="l", xlab=bquote(sigma == 1), ylab="X", ylim=range(rwR))
plot(rwC, type="l", xlab=bquote(sigma == 1), ylab="X", ylim=range(rwC))
?rw_MetropolisC
library(SC19017)
rwR <- rw_MetropolisR(1,25,2000)$x
rwC <- rw_MetropolisC(1,25,2000)$x
par(mfrow=c(1,2))
plot(rwR, type="l", xlab=bquote(sigma == 1), ylab="X", ylim=range(rwR))
plot(rwC, type="l", xlab=bquote(sigma == 1), ylab="X", ylim=range(rwC))
library(SC19017)
?rw_MetropolisC
devtools::document()
library(SC19017)
rwR <- rw_MetropolisR(1,25,2000)$x
rwC <- rw_MetropolisC(1,25,2000)$x
par(mfrow=c(1,2))
plot(rwR, type="l", xlab=bquote(sigma == 1), ylab="X", ylim=range(rwR))
plot(rwC, type="l", xlab=bquote(sigma == 1), ylab="X", ylim=range(rwC))
?rw_MetropolisC
library(SC19017)
rwR <- rw_MetropolisR(1,25,2000)$x
rwC <- rw_MetropolisC(1,25,2000)$x
par(mfrow=c(1,2))
plot(rwR, type="l", xlab=bquote(sigma == 1), ylab="X", ylim=range(rwR))
plot(rwC, type="l", xlab=bquote(sigma == 1), ylab="X", ylim=range(rwC))
?rw_MetropolisC
devtools::document()
library(SC19017)
?rw_MetropolisC
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
par(mfrow = c(1,1))
devtools::build_vignettes()
devtools::build_vignettes()
devtools::document()
library(SC19017)
?rw_MetropolisC
rwR <- rw_MetropolisR(1,25,2000)$x
rwC <- rw_MetropolisC(1,25,2000)$x
par(mfrow=c(1,2))
plot(rwR, type="l", xlab=bquote(sigma == 1), ylab="X", ylim=range(rwR))
plot(rwC, type="l", xlab=bquote(sigma == 1), ylab="X", ylim=range(rwC))
devtools::build_vignettes()
devtools::build_vignettes()
sample(1:10, 10)
devtools::build_vignettes()
devtools::document()
devtools::build_vignettes()
library(SC19017)
??SC19017
data(wine)
y <- wine[, 1]
X <- scale(wine[, -1], center = TRUE, scale = TRUE)
n <- nrow(X)
## split data into training set and testing set
ns <- c(17, 20, 13)
train <- split(y, ns)
train <- SC19017::split(y, ns)
test <- (1:n)[-train]
Xtrain <- X[train, ]
Xtest <- X[test, ]
ytrain <- y[train]
ytest <- y[test]
# bandwidth select
distance <- matrix(NA, nrow = n, ncol = n-1)
for(i in 1:n) {
distance[i, ] <- c(apply(X[-i, ], 1, function(o) {
sqrt(sum((o - X[i, ])^2))
}))
}
sigma <- median(distance)
# estimate e.d.r. directions
Kx <- KX(Xtrain, kernel = "AG", sigma, center = TRUE)
J <- Jy(ytrain, numeric = FALSE)
ei2 <- Ei(Kx, J, s = 0.01)
vtrain <- Vtr(Xtrain, K, ei2, kernel)
vtest <- Vte(Xtest, Xtrain, K, ei2, kernel)
library(SC19017)
# estimate e.d.r. directions
Kx <- KX(Xtrain, kernel = "AG", sigma, center = TRUE)
J <- Jy(ytrain, numeric = FALSE)
ei2 <- Ei(Kx, J, s = 0.01)
vtrain <- Vtr(Xtrain, K, ei2, kernel)
vtrain <- Vtr(Xtrain, Kx, ei2, kernel)
Kx
vtrain <- Vtr(Xtrain, Kx, ei2, "AG")
?Vtr
Vtr
vtrain <- Vtr(Xtrain, Kx, 2, ei2, "AG", sigma)
vtest <- Vte(Xtest, Xtrain, 2, ei2, "AG", sigma)
warning()
vtrain <- Vtr(Xtrain, Kx, 2, ei = ei2, "AG", sigma)
vtrain <- Vtr(Xtrain, Xtrain, Kx, 2, ei = ei2, "AG", sigma)
vtrain <- Vtr(Xtrain, Xtrain, 2, ei = ei2, "AG", sigma)
?vte
?Vte
vtest <- Vte(Xtest, Xtrain, Xtrain, 2, ei2, "AG", sigma)
# knn
library(class)
knn.pred <- knn(vtrain, vtest, ytrain, k = 5)
knn.result <- rep(NA, 3)
for(i in 1:3) {
knn.result[i] <- sum(table(knn.pred, ytest)[-i, i])/sum(table(knn.pred, ytest)[, i])
}
mean(knn.result)
table(knn.pred, ytest)
library(e1071)
svm.model <- svm(vtrain, factor(ytrain))
svm.pred <- predict(svm.model3, vtest)
svm.result <- rep(NA, 3)
for(i in 1:3) {
svm.result[i] <- sum(table(svm.pred, ytest)[-i, i])/sum(table(svm.pred, ytest)[, i])
}
mean(svm.result)
table(svm.pred, ytest)
library(e1071)
svm.model <- svm(vtrain, factor(ytrain))
svm.pred <- predict(svm.model, vtest)
svm.result <- rep(NA, 3)
for(i in 1:3) {
svm.result[i] <- sum(table(svm.pred, ytest)[-i, i])/sum(table(svm.pred, ytest)[, i])
}
mean(svm.result)
table(svm.pred, ytest)
ytest
wine[,-1]
wine[,1]
length(ytest)
library(ggplot2)
Test <- data.frame(v1 = vtest[, 1], v2 = vtest[, 2], classes = as.factor(ytest))
ggplot(Test, aes(x = v1, y = v2, col = classes)) +
geom_point() +
xlab("first e.d.r. direction") +
ylab("second e.d.r. direction")
rm(list= ls())
data(wine)
y <- wine[, 1]
X <- scale(wine[, -1], center = TRUE, scale = TRUE)
n <- nrow(X)
## split data into training set and testing set
ns <- c(17, 20, 13)
train <- SC19017::split(y, ns)
test <- (1:n)[-train]
Xtrain <- X[train, ]
Xtest <- X[test, ]
ytrain <- y[train]
ytest <- y[test]
# bandwidth select
distance <- matrix(NA, nrow = n, ncol = n-1)
for(i in 1:n) {
distance[i, ] <- c(apply(X[-i, ], 1, function(o) {
sqrt(sum((o - X[i, ])^2))
}))
}
sigma <- median(distance)
# estimate e.d.r. directions
Kx <- KX(Xtrain, "AG", sigma, center = TRUE)
J <- Jy(ytrain, numeric = FALSE)
ei2 <- Ei(Kx, J, s = 0.01)
vtrain <- Vtr(Xtrain, Xtrain, 2, ei2, "AG", sigma)
vtest <- Vte(Xtest, Xtrain, Xtrain, 2, ei2, "AG", sigma)
# knn
library(class)
knn.pred <- knn(vtrain, vtest, ytrain, k = 5)
knn.result <- rep(NA, 3)
for(i in 1:3) {
knn.result[i] <- sum(table(knn.pred, ytest)[-i, i])/sum(table(knn.pred, ytest)[, i])
}
mean(knn.result)
table(knn.pred, ytest)
#svm
library(e1071)
svm.model <- svm(vtrain, factor(ytrain))
svm.pred <- predict(svm.model, vtest)
svm.result <- rep(NA, 3)
for(i in 1:3) {
svm.result[i] <- sum(table(svm.pred, ytest)[-i, i])/sum(table(svm.pred, ytest)[, i])
}
mean(svm.result)
table(svm.pred, ytest)
# plot figure
library(ggplot2)
Test <- data.frame(v1 = vtest[, 1], v2 = vtest[, 2], classes = as.factor(ytest))
ggplot(Test, aes(x = v1, y = v2, col = classes)) +
geom_point() +
xlab("first e.d.r. direction") +
ylab("second e.d.r. direction")
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
library(SC19017)
install.packages("rvest")
install.packages("xml2")
install.packages("knitr")
install.packages("corrplot")
devtools::build_vignettes()
devtools::build_vignettes()
library(SC19017)
library(SC19017)
devtools::build_vignettes()
library(SC19017)
